# Цель: закрепить навык решения задач при помощи цикла for, применив знания об основных типах данных.

# Задача "Всё не так уж просто":
# Дан список чисел numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
# Используя этот список составьте второй список primes содержащий только простые числа.
# А так же третий список not_primes, содержащий все не простые числа.
# Выведите списки primes и not_primes на экран(в консоль).

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]   # исходный список чисел
n = 0                # число из списка на проверку
primes = []          # список простых чисел
not_primes = []      # список составных чисел

# для определения простого числа необходимо использовать метод "Перебора делителей" этого числа

i = 0   # счетчик списка
for i in range(len(numbers)):    # перебор чисел списка по всей длине списка
    is_prime = True              # признак простого числа
    n = numbers[i]               # проверяемое число из списка

# "Метод определения простых чисел".
# Один из самых простых способов определить, является ли число простым,
# — разделить его на целые числа от 2 до квадратного корня из числа.
# Если ни одно из этих делений не дает целое число, то число простое.

    if n < 2:            # условие когда 0 и 1 не входят в простые числа
        print(n, '- ни простое и ни составное число')
        continue         # возврат к началу расчета следующего числа из списка
    else:
        f = n ** (1 / 2)             # Корень квадратный из n
    for n1 in range(2, int(f + 1)):  # последовательность чисел от 2 до целого числа (f+1)(не включая (f+1))
        if n % n1 == 0:              # при делении числа из списка на число целое последовательности остаток равен 0
            is_prime = False         # признак лжи простого числа
            break                    # закончить расчет

    if not is_prime:            # если число в списке не из is_prime
        not_primes.append(n)    # то добавим число в список составных чисел
    else:                       # иначе
        primes.append(n)        # добавим в список простых чисел

is_prime = True  # признак простого числа

print(f'Primes:{primes}')
print(f'Not_primes:{not_primes}')